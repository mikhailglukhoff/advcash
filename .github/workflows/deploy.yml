name: Deploy Application

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set commit hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "~/app"

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            docker stop advcash || true
            docker rename advcash advcash-backup || true
            docker build -t advcash:$COMMIT_HASH .
            docker tag advcash:$COMMIT_HASH advcash:latest
            docker run -d --name advcash --restart=always \
              -e API_NAME=${{ secrets.API_NAME }} \
              -e API_SECRET=${{ secrets.API_SECRET }} \
              -e EMAIL=${{ secrets.EMAIL }} \
              -e TG_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }} \
              -p 80:80 \
              advcash:$COMMIT_HASH

      - name: Check if container is running
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if ! docker ps | grep -q "advcash"; then
              echo "Deployment failed, rolling back..."
              docker stop advcash || true
              docker rm advcash || true
              docker rename advcash-backup advcash || true
              docker start advcash || true
              exit 1
            fi

      - name: Cleanup old Docker data
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker system prune -af
